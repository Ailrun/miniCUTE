version: 2.1

workflows:
  version: 2
  test-and-gh-page:
    jobs:
      - haskell-install
      - haskell-build-and-test:
          requires:
            - haskell-install
      - haddock-build:
          requires:
            - haskell-install
          filters:
            branches:
              only: master
      - doxygen-build:
          filters:
            branches:
              only: master
      - gh-page-deploy:
          requires:
            - haskell-build-and-test
            - haddock-build
            - doxygen-build
          filters:
            branches:
              only: master

jobs:
  haskell-install:
    executor: stack-minimal
    steps:
      - checkout
      - make-hpack-hash-target-file
      - restore-all-haskell-caches
      - stack-setup
      - stack-build-deps
      - save-all-haskell-caches

  haskell-build-and-test:
    executor: stack-minimal
    steps:
      - checkout
      - make-hpack-hash-target-file
      - restore-all-haskell-caches

      - stack-verify-all

  haddock-build:
    executor: stack-minimal
    steps:
      - checkout
      - make-hpack-hash-target-file
      - restore-all-haskell-caches

      - stack-haddock
      - run:
          name: Move haddock documents into a temporary directory
          command: |
            mv $(stack path --local-doc-root) /tmp/haddock
      - persist_to_workspace:
          root: "/tmp"
          paths:
            - "./haddock/*"

  doxygen-build:
    executor: doxygen-minimal
    steps:
      - checkout

      - doxygen
      - run:
          name: Move doxygen documents into a temporary directory
          command: |
            mv runtime/doc/html /tmp/doxygen
      - persist_to_workspace:
          root: "/tmp"
          paths:
            - "./doxygen/*"

  gh-page-deploy:
    executor: node-minimal
    steps:
      - checkout
      - restore-all-node-caches
      - attach_workspace:
          # Use relative path because of gh-pages cli
          at: ".gh-pages/"
      - copy-templates

      - deploy-documents
      - save-all-node-caches

executors:
  stack-minimal:
    docker:
      - image: cutelang/stack-small:lts-13.27
  doxygen-minimal:
    docker:
      - image: cutelang/doxygen-small:1.8.15
  node-minimal:
    docker:
      - image: circleci/node:12

commands:
  stack-setup:
    description: Setup haskell tool stack.
    steps:
      - run:
          name: Get appropriate GHC for this project
          command: |
            stack setup -j2
  stack-build-deps:
    description: Build only dependencies with haskell tool stack.
    steps:
      # Use `-j1` as a memory-safe way.
      - run:
          name: Build haddock dependencies
          command: |
            stack haddock --only-dependencies -j1
      - run:
          name: Build test dependencies
          command: |
            stack test --only-dependencies -j1
      - run:
          name: Build dependencies
          command: |
            stack build --only-dependencies -j1
  stack-test-all:
    description: Test everything related with the haskell codes in this repo with haskell tool stack.
    steps:
      - run:
          name: Execute tests
          command: |
            stack test -j2
  stack-build-all:
    description: Build everything related with the haskell codes in this repo with haskell tool stack.
    steps:
      - run:
          name: Build executables
          command: |
            stack build -j2
  stack-verify-all:
    description: Verify everything related with the haskell codes in this repo with haskell tool stack.
    steps:
      - stack-test-all
      - stack-build-all

  stack-haddock:
    description: Build haddock documents for the haskell codes in this repo.
    steps:
      - run:
          name: Build haddock documents
          command: |
            stack haddock -j2

  doxygen:
    description: Build doxygen documents for runtime.
    steps:
      - run:
          name: Build doxygen documents
          command: |
            cd runtime
            make html
            cd ..

  copy-templates:
    description: Copy template files to the document directory.
    steps:
      # Use relative path because of gh-pages cli
      - run:
          name: Copy the content of .gh-page-templates directory to the document directory
          command: |
            cp -r .gh-page-templates/* .gh-pages/

  deploy-documents:
    description: Deploy documents.
    steps:
      - add_ssh_keys:
          fingerprints:
            - "f4:d3:a7:2e:7a:2e:8f:a2:b6:72:35:cb:7f:82:9f:fd"
      - deploy:
          # gh-pages cli does not support absolute paths.
          # It recognizes an absolute path as a relative path from the project root.
          name: Deploy documents to gh-pages branch
          command: |
            git config user.email "miniCUTE-documents@github.com"
            git config user.name "miniCUTE-documents"
            git push :gh-pages
            npx gh-pages --dotfiles --message "Update to sync with ${CIRCLE_SHA1} [skip ci]" -d .gh-pages/

  make-hpack-hash-target-file:
    description: Compose a file to calculate hpack hashes for caching.
    steps:
      - run:
          name: Compose a file to calculate hpack hashes for caching
          command: |
            find . -name \"package.yaml\" -print0 | sort -z -n | xargs -0 cat > hpack-hash.txt

  restore-all-haskell-caches:
    description: "Restore all cached parts of haskell packages."
    steps:
      - restore_cache:
          name: Restore Global Data
          keys:
            - circleci-minicute-haskell-global-v5.0-{{ arch }}-{{ checksum "stack.yaml" }}-{{ checksum "hpack-hash.txt" }}
            - circleci-minicute-haskell-global-v5.0-{{ arch }}-{{ checksum "stack.yaml" }}
            - circleci-minicute-haskell-global-v5.0-{{ arch }}
            - circleci-minicute-haskell-global-v5.0

      - restore_cache:
          name: Restore Project Local Data
          keys:
            - circleci-minicute-project-local-v5.0-{{ arch }}-{{ checksum "stack.yaml" }}-{{ checksum "hpack-hash.txt" }}
            - circleci-minicute-project-local-v5.0-{{ arch }}-{{ checksum "stack.yaml" }}
            - circleci-minicute-project-local-v5.0-{{ arch }}
            - circleci-minicute-project-local-v5.0

  save-all-haskell-caches:
    description: "Save all cachable parts of haskell packages."
    steps:
      - save_cache:
          name: Cache Global Data
          key: circleci-minicute-haskell-global-v5.0-{{ arch }}-{{ checksum "stack.yaml" }}-{{ checksum "hpack-hash.txt" }}
          paths:
            - "~/.stack"

      - save_cache:
          name: Cache Project Local Data
          key: circleci-minicute-project-local-v5.0-{{ arch }}-{{ checksum "stack.yaml" }}-{{ checksum "hpack-hash.txt" }}
          paths:
            - ".stack-work"

  restore-all-node-caches:
    description: "Restore all cached parts of node packages."
    steps:
      - restore_cache:
          name: Restore Global Data
          keys:
            - circleci-minicute-node-global-v5.0

  save-all-node-caches:
    description: "Save all cachable parts of node packages."
    steps:
      - save_cache:
          name: Cache Global Data
          key: circleci-minicute-node-global-v5.0
          paths:
            - "~/.npm"
